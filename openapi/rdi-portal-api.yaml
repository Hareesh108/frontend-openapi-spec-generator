openapi: 3.0.3
info:
  version: 1.0.0
  title: RDI Portal API
  contact:
    name: Contact our support
    email: hello@reldyn.co
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  description: >
    Included below are the API Endpoints available within the Reldyn Identity
    (RDI) Portal API. <br><br> There are many OpenAPI Tools available for you to
    work directly with the OpenAPI Specification, if desired. For instance, you
    may leverage code generation tools to generate client libraries in any one
    of the support languages and frameworks.
  x-logo:
    url: "https://reldyn.co/assets/images/logo.svg"
    backgroundColor: "#ee0979"
    altText: Reldyn
servers:
  - url: "https://rdi.reldyn.dev"
tags:
  - name: Organizations
    description: The API allows you to view and manage the organizations.
paths:
  /v1/organizations:
    post:
      summary: Create a new organization
      description: Creates a new organization.
      operationId: createOrganization
      tags:
        - Organizations
      requestBody:
        description: Organization creation details
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - org_name
                - org_registration_no
              properties:
                org_name:
                  type: string
                  description: Name of the organization
                  example: Bank Islam
                org_registration_no:
                  type: string
                  description: Registration no of the organization
                  example: 1234567890
                org_contact_no:
                  type: string
                  description: Contact phone number for the organization
                  example: "+601234567890"
                org_contact_name:
                  type: string
                  description: Contact name for the organization
                  example: Darren
                org_email:
                  type: string
                  format: email
                  description: Contact email for the organization
                  example: beu@beu.com
                note:
                  type: string
                  description: Note for the organization
                  example: >-
                    This organization focuses on providing technology solutions
                    for various industries.
                apps:
                  description: Selected app
                  type: array
                  uniqueItems: true
                  items:
                    type: string
                    example: ONFIDO
                    enum:
                      - ONFIDO
                      - JUMIO
      responses:
        "201":
          description: Organization created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationDto"
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalErrorResponseDto"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalErrorResponseDto"
    get:
      summary: Retrieve a list of organizations
      description: Retrieves a list of all organizations.
      operationId: listOrganizations
      tags:
        - Organizations
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: Custom filtering parameters
        - in: query
          name: page
          schema:
            type: integer
            default: 0
          description: The page number to retrieve (0-based)
        - in: query
          name: size
          schema:
            type: integer
            default: 20
          description: The number of items to retrieve per page
        - in: query
          name: sort
          schema:
            type: array
            items:
              type: string
              example: "org_name,desc"
          description: "Sort by properties, e.g. `status,desc` or `id,asc`"
      responses:
        "200":
          description: A list of organizations with pagination details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationsPaginatedResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalErrorResponseDto"
  "/v1/organizations/{organizationId}":
    get:
      summary: Retrieve a single organization
      description: Retrieves details of a single organization by its ID.
      operationId: getOrganization
      tags:
        - Organizations
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
          description: Unique identifier for the organization
          example: d6f7ab5f-43c6-433d-98cc-dd253acb21a3
      responses:
        "200":
          description: Organization details retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationDto"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalErrorResponseDto"
    put:
      summary: Update an organization
      description: Updates details of an existing organization.
      operationId: updateOrganization
      tags:
        - Organizations
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
          description: Unique identifier for the organization
          example: d6f7ab5f-43c6-433d-98cc-dd253acb21a3
      requestBody:
        description: Updated organization details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                org_name:
                  type: string
                  description: Name of the organization
                  example: Bank Islam
                org_registration_no:
                  type: string
                  description: Registration no of the organization
                  example: 1234567890
                org_status:
                  type: string
                  description: "Status of the organization (e.g., active, inactive)"
                  enum:
                    - ACTIVE
                    - INACTIVE
                  example: ACTIVE
                org_contact_no:
                  type: string
                  description: Contact phone number for the organization
                  example: "+601234567890"
                org_contact_name:
                  type: string
                  description: Contact name for the organization
                  example: Darren
                org_email:
                  type: string
                  format: email
                  description: Contact email for the organization
                  example: beu@beu.com
                note:
                  type: string
                  description: Note for the organization
                  example: >-
                    This organization focuses on providing technology solutions
                    for various industries.
                org_logo_url:
                  type: string
                  description: Logo url for the organization
                  example: "https://s3.ap-south-1.amazonaws.com/logo.jpg"
      responses:
        "200":
          description: Organization updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationDto"
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalErrorResponseDto"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalErrorResponseDto"
    delete:
      summary: Delete an organization
      description: Deletes an existing organization account by id.
      operationId: deleteOrganization
      tags:
        - Organizations
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
          description: Unique identifier for the organization
          example: d6f7ab5f-43c6-433d-98cc-dd253acb21a3
      responses:
        "204":
          description: Organization deleted successfully
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalErrorResponseDto"
  "/v1/organizations/{organizationId}/apps":
    post:
      summary: Install the apps
      description: Install the apps.
      operationId: installApps
      tags:
        - Organizations
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
          description: Unique identifier for the organization
          example: d6f7ab5f-43c6-433d-98cc-dd253acb21a3
      requestBody:
        description: App details
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - apps
              properties:
                apps:
                  description: Selected app
                  type: array
                  uniqueItems: true
                  items:
                    type: string
                    example: ONFIDO
                    enum:
                      - ONFIDO
                      - JUMIO
      responses:
        "201":
          description: App installed successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrgAppDto"
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalErrorResponseDto"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalErrorResponseDto"
components:
  schemas:
    OrganizationDto:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the organization
          example: 9b434c1b-a9c6-42b3-8020-ff9fed9ec42a
        created_at:
          type: string
          format: date-time
          example: "2021-02-01T12:34:56Z"
        created_by:
          type: string
          description: Name of the user that created this organization
          example: Foo
        updated_at:
          type: string
          format: date-time
          example: "2021-02-01T12:34:56Z"
        updated_by:
          type: string
          description: Name of the user that last updated this organization
          example: Foo
        org_name:
          type: string
          description: Name of the organization
          example: Bank Islam
        org_registration_no:
          type: string
          description: Registration no of the organization
          example: 1234567890
        org_status:
          type: string
          description: "Status of the organization (e.g., active, inactive)"
          enum:
            - ACTIVE
            - INACTIVE
          example: ACTIVE
        org_primary_account_id:
          type: string
          description: >-
            Foreign key referencing the primary account associated with the
            organization
          example: 6722406b-e823-40a0-b691-ea187a1e364d
        org_contact_no:
          type: string
          description: Contact phone number for the organization
          example: "+601234567890"
        org_contact_name:
          type: string
          description: Contact name for the organization
          example: Darren
        org_email:
          type: string
          format: email
          description: Contact email for the organization
          example: beu@beu.com
        note:
          type: string
          description: Note for the organization
          example: >-
            This organization focuses on providing technology solutions for
            various industries.
        org_logo_url:
          type: string
          description: Logo url for the organization
          example: "https://s3.ap-south-1.amazonaws.com/logo.jpg"
        apps:
          type: array
          items:
            $ref: "#/components/schemas/OrgAppDto"
    OrgAppDto:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the organization
          example: 9b434c1b-a9c6-42b3-8020-ff9fed9ec42a
        created_at:
          type: string
          format: date-time
          example: "2021-02-01T12:34:56Z"
        created_by:
          type: string
          description: Name of the user that created this organization
          example: Foo
        updated_at:
          type: string
          format: date-time
          example: "2021-02-01T12:34:56Z"
        updated_by:
          type: string
          description: Name of the user that last updated this organization
          example: Foo
        org_id:
          type: string
          description: Unique identifier for the organization
          example: 9b434c1b-a9c6-42b3-8020-ff9fed9ec42a
        app_name:
          type: string
          description: Name of the app
          example: ONFIDO
        app_properties:
          description: Custom properties of the app
          type: object
          properties:
            key:
              type: string
              description: Key of the property
              example: onfido.similarity.score_threshold
            value:
              type: string
              description: Value of the property
              example: 0.5
        app_api_key:
          type: string
          description: Api Key of the app
          example: api_sandbox.57u0VjSqHpL.8yyhfdGevnAEkRbLkBzufrSlEz6xTO8j
    GlobalErrorResponseDto:
      type: object
      properties:
        timestamp:
          type: string
          description: Timestamp of the error occurred
          example: "2024-10-07T16:51:24.595+08:00"
        status:
          type: integer
          description: Error code indicating the issue
        message:
          type: string
          description: Error message that describes the issue
        path:
          type: string
          description: The endpoint path where the error occurred
          example: /v1/organizations
    OrganizationsPaginatedResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/OrganizationDto"
        number:
          type: integer
          example: 0
        size:
          type: integer
          example: 20
        total_elements:
          type: integer
          example: 1
        last:
          type: boolean
          example: true
        first:
          type: boolean
          example: true
        total_pages:
          type: integer
          example: 1
        number_of_elements:
          type: integer
          example: 1
        empty:
          type: boolean
          example: false
