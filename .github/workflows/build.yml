# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "dev" ]

env:
  AWS_REGION: ap-south-1
  AWS_INSTANCE_SG_ID: sg-0330fd18f686f7042
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read  

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.18.0]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v2
      id: changes
      with:
        base: "dev"
        filters: |
          portalapi:
            - 'openapi/rdi-portal-api.yaml'
          verificationapi:
            - 'openapi/rdi-verification-api.yaml'
    
    - name: Configure AWS Credentials
      if: steps.changes.outputs.verificationapi == 'true' || steps.changes.outputs.portalapi == 'true'
      uses: aws-actions/configure-aws-credentials@v4
      with: 
        role-to-assume: arn:aws:iam::390368574241:role/GitHubAction-AssumeRoleWithAction
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: ${{ env.AWS_REGION }}
    - name: Use Node.js ${{ matrix.node-version }}
      if: steps.changes.outputs.verificationapi == 'true' || steps.changes.outputs.portalapi == 'true'
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install libraries 
      if: steps.changes.outputs.verificationapi == 'true' || steps.changes.outputs.portalapi == 'true'
      run: npm ci

    - name: Deploy rdi-portal-api.html
      if: steps.changes.outputs.portalapi == 'true'
      run: |
        npm run build-docs -- openapi/rdi-portal-api.yaml --output=rdi-portal-api.html
        aws s3 cp rdi-portal-api.html s3://rdi-openapi

    - name: Deploy rdi-verification-api.html
      if: steps.changes.outputs.verificationapi == 'true'
      run: |
        npm run build-docs -- openapi/rdi-verification-api.yaml --output=rdi-verification-api.html
        aws s3 cp rdi-verification-api.html s3://rdi-openapi
